<?php
use Zend\Mvc\Application;
?>
<h1><?= __('404-error') ?></h1>
<h2><?= $this->message ?></h2>

<?php if (! empty($this->reason)) :
    switch ($this->reason) {
        case Application::ERROR_CONTROLLER_CANNOT_DISPATCH:
            $reasonMessage = 'The requested controller was unable to dispatch the request.';
            break;
        case Application::ERROR_MIDDLEWARE_CANNOT_DISPATCH:
            $reasonMessage = 'The requested middleware was unable to dispatch the request.';
            break;
        case Application::ERROR_CONTROLLER_NOT_FOUND:
            $reasonMessage = 'The requested controller could not be mapped to an existing controller class.';
            break;
        case Application::ERROR_CONTROLLER_INVALID:
            $reasonMessage = 'The requested controller was not dispatchable.';
            break;
        case Application::ERROR_ROUTER_NO_MATCH:
            $reasonMessage = 'The requested URL could not be matched by routing.';
            break;
        default:
            $reasonMessage = 'We cannot determine at this time why a 404 was generated.';
            break;
    }
?>
<p><?= $reasonMessage ?></p>
<?php endif ?>

<?php if (! empty($this->controller)) : ?>
<dl>
    <dt><?= __('controller') ?>:</dt>
    <dd>
        <?= $this->escapeHtml($this->controller) ?>
        <?php
        if (! empty($this->controller_class) && $this->controller_class != $this->controller) {
            printf('(resolves to %s)', $this->escapeHtml($this->controller_class));
        }
        ?>
    </dd>
</dl>
<?php endif ?>

<?php if (! empty($this->display_exceptions)) : ?>
    <?php if (isset($this->exception)
        && ($this->exception instanceof \Exception || $this->exception instanceof \Error)) : ?>
<hr/>

<h2><?= __('Additional information') ?>:</h2>
<h3><?= get_class($this->exception) ?></h3>
<dl>
    <dt><?= __('File') ?>:</dt>
    <dd>
        <pre><?= $this->exception->getFile() ?>:<?= $this->exception->getLine() ?></pre>
    </dd>
    <dt><?= __('Message') ?>:</dt>
    <dd>
        <pre><?= $this->escapeHtml($this->exception->getMessage()) ?></pre>
    </dd>
    <dt><?= __('stack-trace') ?>:</dt>
    <dd>
        <pre><?= $this->escapeHtml($this->exception->getTraceAsString()) ?></pre>
    </dd>
</dl>

        <?php if ($ex = $this->exception->getPrevious()) : ?>
<hr/>

<h2><?= __('previous-exceptions') ?>:</h2>
<ul class="list-unstyled">
            <?php $icount = 0 ?>
            <?php while ($ex) : ?>
    <li>
        <h3><?= get_class($ex) ?></h3>
        <dl>
            <dt><?= __('file') ?>:</dt>
            <dd>
                <pre><?= $ex->getFile() ?>:<?= $ex->getLine() ?></pre>
            </dd>
            <dt><?= __('Message') ?>:</dt>
            <dd>
                <pre><?= $this->escapeHtml($ex->getMessage()) ?></pre>
            </dd>
            <dt><?= __('stack-trace') ?>:</dt>
            <dd>
                <pre><?= $this->escapeHtml($ex->getTraceAsString()) ?></pre>
            </dd>
        </dl>
    </li>
                <?php
                $ex = $ex->getPrevious();
                if (++$icount >= 50) {
                    echo '<li>'.__('more-exceptions').'.</li>';
                    break;
                }
                ?>
            <?php endwhile ?>
</ul>
        <?php endif ?>
    <?php else : ?>
<h3><?= __('no-exception') ?></h3>
    <?php endif ?>
<?php endif ?>
